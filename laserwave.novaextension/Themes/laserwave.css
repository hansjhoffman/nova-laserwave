meta {
  -theme-display-name: "LaserWave (High Contrast)";
  -theme-interface-style: dark;
  -theme-accent-color: auto;
}
meta.window {
  background-color: #19151e;
  border-color: #19151e;
}
meta.titlebar {
  color: #b4abbe;
  border-color: #2e303e;
  background-color: inherit;
}
meta.titlebar.inactive {
  background-color: #242029;
}
meta.button {
  color: #ffffff;
  background-color: #d887f5;
}
meta.button.highlighted {
  background-color: #c958f1;
}
meta.button.highlighted.selected {
  background-color: #c958f1;
}
meta.button.selected {
  background-color: #d887f5;
}
meta.textfield {
  background-color: #322a3c;
  border-color: #2e3033;
}
meta.document {
  background-color: #19151e;
  border-color: #19151e;
}
meta.text {
  color: #dcdbdd;
  background-color: #19151e;
}
meta.text.selected {
  background-color: #ff52bf27;
}
meta.cursor {
  background-color: #26202d;
}
meta.indentguide {
  border-color: #3feabf;
}
meta.gutter {
  color: #b4abbe;
}
meta.gutter.selected {
  background-color: #19151e;
  color: #ffffff;
}

/* Syntax styles - https://docs.nova.app/extensions/themes */
comment {
  font-style: italic;
  color: #b4abbe;
}

processing {
  color: #000;
}

declaration {
  color: #1ed3ec;
}

bracket {
  color: #b4a8c8;
}

operator {
  color: #b4a8c8;
}

invalid {
  background-color: #db8fab;
  color: #f8f8f1;
}

link {
  color: blue;
}

/* Keywords */
keyword {
  color: #1ed3ec;
}

/* Values */
value,
value.boolean,
value.number,
value.null,
value.symbol,
value.entity {
  color: #ffe261;
}

/* Identifiers */
identifier.global,
identifier.variable {
  color: #ffffff;
}

identifier.function {
  color: #ff52bf;
}

identifier.type {
  color: #d887f5;
}

/* Definitions */
/* Strings */
string {
  color: #acdfef;
}

string-template {
  color: red;
}

string-template.value {
  color: blue;
}

regex {
  color: red;
}

regex.escaped {
  color: blue;
}

cdata {
  color: red;
}

/* Types */
/* Tags */
tag.attribute.name {
  color: #ff52bf;
}

tag.open,
tag.close {
  color: #3feabf;
}

tag.attribute.value {
  color: #acdfef;
}

tag.attribute.operator {
  color: #3feabf;
}

tag.name {
  color: #3feabf;
}

/* Styles */
style.at {
  color: #1ed3ec;
  font-weight: bold;
}

/* Markdown */
markup.heading {
  color: #1ed3ec;
}

markup.line {
  color: #ff52bf;
}

markup.bold {
  color: #ff52bf;
  font-weight: bold;
}

markup.italic {
  color: #ff52bf;
  font-style: italic;
}

markup.strikethrough {
  color: #ff52bf;
}

markup.list.item,
markup.block.quote {
  color: #3feabf;
}

markup.block.code,
markup.inline.code {
  background-color: #19151e;
  color: #b4a8c8;
}

markup.link {
  color: #d887f5;
}

/* JSON */
json.comma {
  color: #b4a8c8;
}

json.key {
  color: #1ed3ec;
}

/* YAML */
yaml.string.unquoted {
  color: #acdfef;
}

yaml.operator.literal {
  color: #ffe261;
}

/* SCSS */
scss.style.operator {
  color: #1ed3ec;
}

/* CSS */
css.style.selector.identifier.name.class {
  color: #ff52bf;
}

/* Shell Script */
shell.definition.function {
  color: #ff52bf;
}

shell.string-template {
  color: #b4abbe;
}

shell.keyword.builtin-command {
  color: #ff52bf;
}

shell.operator {
  color: #3feabf;
}

/* Makefile */
makefile.identifier {
  color: #ff52bf;
}

makefile.identifier.dependencies {
  color: #b4abbe;
}

/* Terminal */
terminal.black {
  color: #000;
}

terminal.bright-black {
  color: #000;
}

terminal.blue {
  color: #40b4c4;
}

terminal.bright-blue {
  color: #1ed3ec;
}

terminal.cyan {
  color: #b4dce7;
}

terminal.bright-cyan {
  color: #acdfef;
}

terminal.green {
  color: #74dfc4;
}

terminal.bright-green {
  color: #3feabf;
}

terminal.magenta {
  color: #b381c5;
}

terminal.bright-magenta {
  color: #d887f5;
}

terminal.red {
  color: #eb64b9;
}

terminal.bright-red {
  color: #ff52bf;
}

terminal.yellow {
  color: #ffe261;
}

terminal.bright-yellow {
  color: #ffe261;
}

terminal.white {
  color: #ffffff;
}

terminal.bright-white {
  color: #ffffff;
}

/* Typescript */
typescript.keyword.self {
  color: #ffe261;
}

typescript.operator {
  color: #b4a8c8;
}

/*# sourceMappingURL=laserwave.css.map */
